# Config for single device full finetuning in full_finetune_single_device.py
# using a Llama3 8B model
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download meta-llama/Meta-Llama-3-8B --output-dir /tmp/Meta-Llama-3-8B --hf-token <HF_TOKEN>
#
# The default config uses an optimizer from bitsandbytes. If you do not have it installed,
# you can install it with
#   pip install bitsandbytes
#
# To launch on a single device, run the following command from root:
#   tune run full_finetune_single_device --config llama3/8B_full_single_device
#
# You can add specific overrides through the command line. For example
# to override the checkpointer directory while launching training
# you can run:
#   tune run full_finetune_single_device --config llama3/8B_full_single_device checkpointer.checkpoint_dir=<YOUR_CHECKPOINT_DIR>
#
# This config works only for training on single device.


# Model Arguments
model:
  _component_: torchtune.models.llama3.llama3_8b

# Tokenizer
tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer_transformers
  path: ./torchtune-llama3-8b-instruct/tokenizer.json

checkpointer:
  _component_: torchtune.utils.FullModelHFCheckpointer
  checkpoint_dir: ./torchtune-llama3-8b-instruct/
  checkpoint_files: [
    model-00001-of-00004.safetensors,
    model-00002-of-00004.safetensors,
    model-00003-of-00004.safetensors,
    model-00004-of-00004.safetensors
  ]
  recipe_checkpoint: null
  output_dir: ./torchtune-llama3-8b-instruct/output/
  model_type: LLAMA3
resume_from_checkpoint: False

# Dataset
dataset:
  _component_: torchtune.datasets.alpaca_dataset
  train_on_input: True
seed: null
shuffle: True
batch_size: 2

# Optimizer and Scheduler
optimizer:
  _component_: bitsandbytes.optim.AdamW8bit
  lr: 2e-5

loss:
  _component_: torch.nn.CrossEntropyLoss

# Training
epochs: 3
max_steps_per_epoch: null
gradient_accumulation_steps: 1
optimizer_in_bwd: True
compile: False

# Environment
device: cuda
enable_activation_checkpointing: True
dtype: bf16

# Logging
metric_logger:
  _component_: torchtune.utils.metric_logging.DiskLogger
  log_dir: ${output_dir}
output_dir: ./torchtune-llama3-8b-instruct/logs/
log_every_n_steps: null
